{{#pattern}}{{#isString}}
//TODO REMOVE @Pattern(regexp = "{{{pattern}}}")
                ValidatorUtils.validatePattern({{paramName}}, "{{{pattern}}}");{{/isString}}{{/pattern}}{{!
minLength && maxLength set}}{{#minLength}}{{#maxLength}}
//TODO REMOVE @Size(min = {{minLength}}, max = {{maxLength}})
                ValidatorUtils.validateSize({{paramName}}, {{minLength}}, {{maxLength}});{{/maxLength}}{{/minLength}}{{!
minLength set, maxLength not}}{{#minLength}}{{^maxLength}}
//TODO REMOVE     @Size(min = {{minLength}})
                ValidatorUtils.validateSize({{paramName}}, {{minLength}}, null);{{/maxLength}}{{/minLength}}{{!
minLength not set, maxLength set}}{{^minLength}}{{#maxLength}}
//TODO REMOVE @Size(max = {{.}})
                ValidatorUtils.validateSize({{paramName}}, null, {{.}});{{/maxLength}}{{/minLength}}{{!
@Size: minItems && maxItems set}}{{#minItems}}{{#maxItems}}
//TODO REMOVE @Size(min = {{minItems}}, max = {{maxItems}})
                ValidatorUtils.validateSize({{paramName}}, {{minItems}}, {{maxItems}});{{/maxItems}}{{/minItems}}{{!
@Size: minItems set, maxItems not}}{{#minItems}}{{^maxItems}}
//TODO REMOVE @Size(min = {{minItems}})
                ValidatorUtils.validateSize({{paramName}}, {{minItems}}, null);{{/maxItems}}{{/minItems}}{{!
@Size: minItems not set && maxItems set}}{{^minItems}}{{#maxItems}}
//TODO REMOVE @Size(max = {{.}})
                ValidatorUtils.validateSize({{paramName}}, null, {{.}});
{{/maxItems}}{{/minItems}}{{!
@Email: useBeanValidation set && isEmail set}}{{#useBeanValidation}}{{#isEmail}}
//TODO REMOVE @javax.validation.constraints.Email
                //RFC 5322 for Email Validation
                ValidatorUtils.validatePattern({{paramName}}, "^[a-zA-Z0-9_!#$%&'*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$");
{{/isEmail}}{{/useBeanValidation}}{{!
check for integer or long / all others=decimal type with @Decimal*
isInteger set
}}{{#isInteger}}{{#minimum}}
//TODO REMOVE @Min({{.}})
                ValidatorUtils.validateMin({{paramName}}, {{.}});{{/minimum}}{{#maximum}}
//TODO REMOVE @Max({{.}})
                ValidatorUtils.validateMax({{paramName}}, {{.}});{{/maximum}}{{/isInteger}}{{!
isLong set
}}{{#isLong}}{{#minimum}}
//TODO REMOVE @Min({{.}}L)
                ValidatorUtils.validateMin({{paramName}}.intValue(), {{.}});{{/minimum}}{{#maximum}}
        //TODO REMOVE @Max({{.}}L)
                ValidatorUtils.validateMax({{paramName}}.intValue(), {{.}});{{/maximum}}{{/isLong}}{{!
Not Integer, not Long => we have a decimal value!
}}{{^isInteger}}{{^isLong}}{{#minimum}}
//TODO REMOVE @DecimalMin({{#exclusiveMinimum}}value = {{/exclusiveMinimum}}"{{minimum}}"{{#exclusiveMinimum}}, inclusive = false{{/exclusiveMinimum}})
                ValidatorUtils.validateMin({{paramName}}, "{{minimum}}", {{#exclusiveMinimum}}false{{/exclusiveMinimum}}{{^exclusiveMinimum}}true{{/exclusiveMinimum}});{{/minimum}}{{#maximum}}
//TODO REMOVE @DecimalMax({{#exclusiveMaximum}}value = {{/exclusiveMaximum}}"{{maximum}}"{{#exclusiveMaximum}}, inclusive = false{{/exclusiveMaximum}})
                ValidatorUtils.validateMax({{paramName}}, "{{maximum}}", {{#exclusiveMaximum}}false{{/exclusiveMaximum}}{{^exclusiveMaximum}}true{{/exclusiveMaximum}});{{/maximum}}{{/isLong}}{{/isInteger}}