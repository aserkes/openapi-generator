Objects.requireNonNull({{paramName}});
{{#pattern}}
    {{#isString}}
//TODO REMOVE @Pattern(regexp = "{{{pattern}}}")
ValidatorUtils.validatePattern({{paramName}}, "{{{pattern}}}");
    {{/isString}}
{{/pattern}}{{!
minLength && maxLength set
}}{{#minLength}}
    {{#maxLength}}
//TODO REMOVE @Size(min = {{minLength}}, max = {{maxLength}})
ValidatorUtils.validateSize({{{pattern}}}, {{minLength}}, {{maxLength}});
    {{/maxLength}}
{{/minLength}}{{!
minLength set, maxLength not
}}{{#minLength}}
    {{^maxLength}}
//TODO REMOVE     @Size(min = {{minLength}})
    {{/maxLength}}
{{/minLength}}{{!
minLength not set, maxLength set
}}{{^minLength}}{{#maxLength}}//TODO REMOVE @Size(max = {{.}}) {{/maxLength}}{{/minLength}}{{!
@Size: minItems && maxItems set
}}{{#minItems}}{{#maxItems}}//TODO REMOVE @Size(min = {{minItems}}, max = {{maxItems}}) {{/maxItems}}{{/minItems}}{{!
@Size: minItems set, maxItems not
}}{{#minItems}}{{^maxItems}}//TODO REMOVE @Size(min = {{minItems}}) {{/maxItems}}{{/minItems}}{{!
@Size: minItems not set && maxItems set
}}{{^minItems}}{{#maxItems}}//TODO REMOVE @Size(max = {{.}}) {{/maxItems}}{{/minItems}}{{!
@Email: useBeanValidation set && isEmail set
}}{{#useBeanValidation}}{{#isEmail}}//TODO REMOVE @javax.validation.constraints.Email{{/isEmail}}{{/useBeanValidation}}{{!
check for integer or long / all others=decimal type with @Decimal*
isInteger set
}}{{#isInteger}}
    {{#minimum}}
        //TODO REMOVE @Min({{.}})
    {{/minimum}}
    {{#maximum}}
        //TODO REMOVE @Max({{.}})
    {{/maximum}}
{{/isInteger}}{{!
isLong set
}}{{#isLong}}
    {{#minimum}}
        //TODO REMOVE @Min({{.}}L)
    {{/minimum}}
    {{#maximum}}
        //TODO REMOVE @Max({{.}}L)
    {{/maximum}}
{{/isLong}}{{!
Not Integer, not Long => we have a decimal value!
}}{{^isInteger}}{{^isLong}}{{#minimum}}//TODO REMOVE @DecimalMin({{#exclusiveMinimum}}value = {{/exclusiveMinimum}}"{{minimum}}"{{#exclusiveMinimum}}, inclusive = false{{/exclusiveMinimum}}) {{/minimum}}{{#maximum}}@DecimalMax({{#exclusiveMaximum}}value = {{/exclusiveMaximum}}"{{maximum}}"{{#exclusiveMaximum}}, inclusive = false{{/exclusiveMaximum}}) {{/maximum}}{{/isLong}}{{/isInteger}}